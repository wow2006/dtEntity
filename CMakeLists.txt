CMAKE_MINIMUM_REQUIRED(VERSION 2.6.0 FATAL_ERROR)
 
PROJECT(dtEntity)

IF (WIN32)
SET(CMAKE_DEBUG_POSTFIX  "d")
ENDIF (WIN32)

#to allow usage of hash_map:
IF(UNIX)
    ADD_DEFINITIONS(-Wno-deprecated)
ENDIF(UNIX)

SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/CMakeModules;${CMAKE_SOURCE_DIR}/source/osgLibRocket/cmake;${CMAKE_MODULE_PATH}")
SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/bin)
SET(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR})

# Dynamic vs Static Linking
OPTION(DYNAMIC_DTENTITY "Set to ON to build dtEntity for dynamic linking.  Use OFF for static." ON)
IF(DYNAMIC_DTENTITY)
    SET(DTENTITY_USER_DEFINED_DYNAMIC_OR_STATIC "SHARED")
ELSE ()
    SET(DTENTITY_USER_DEFINED_DYNAMIC_OR_STATIC "STATIC")
    ADD_DEFINITIONS(-DDTENTITY_STATIC_BUILD)
    SET(BUILD_OSGLIBROCKET_STATIC "TRUE")
ENDIF()

OPTION(BUILD_WITH_DELTA3D "Build with Delta3D" OFF)
OPTION(BUILD_TESTS "Build unit tests" OFF)
OPTION(BUILD_JAVASCRIPT_WRAPPERS "Build wrappers for dtScript" OFF)
OPTION(BUILD_PHYSX "Build physx component" OFF)
OPTION(BUILD_QT "Build Qt widgets" OFF)
OPTION(BUILD_LIBROCKET "Build LibRocket bindings" OFF)
OPTION(BUILD_EXAMPLES "Build examples" OFF)

IF (BUILD_WITH_DELTA3D)
  FIND_PACKAGE(Delta3D REQUIRED)
ENDIF (BUILD_WITH_DELTA3D)

OPTION(BUILD_CEGUI_WRAPPER "Build CEGUI module" OFF)

SET(USE_OSG_ANIMATION   1)
SET(USE_OSG_DB          1)
SET(USE_OSG_GA          1)
SET(USE_OSG_PARTICLE    1)
SET(USE_OSG_SHADOW      1)
SET(USE_OSG_SIM         1)
SET(USE_OSG_TEXT        1)
SET(USE_OSG_TERRAIN     0)
SET(USE_OSG_UTIL        1)
SET(USE_OSG_VIEWER      1)
SET(USE_OSG_MANIPULATOR 1)
FIND_PACKAGE(OpenSceneGraph REQUIRED)


IF (BUILD_WITH_DELTA3D)
	LINK_DIRECTORIES( ${DELTA3D_LIB_DIR} )
	IF (DELTA3D_EXT_DIR)
	  LINK_DIRECTORIES( ${DELTA3D_EXT_DIR}/lib )
	ENDIF (DELTA3D_EXT_DIR)
ENDIF (BUILD_WITH_DELTA3D)
       
if(APPLE)
    if ("${CMAKE_OSX_SYSROOT}" MATCHES ".*/Developer/SDKs/MacOSX10.7.sdk") 
        MESSAGE(STATUS "MacOSX10.7.sdk")
        SET(CMAKE_OSX_ARCHITECTURES "x86_64" CACHE STRING "Build architectures for OSX" FORCE)
        SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -mmacosx-version-min=10.7 -fvisibility-inlines-hidden" CACHE STRING "Flags used by the compiler during all build types." FORCE)
    endif()
endif()

IF(BUILD_QT)
   OPTION(BUILD_ENET_INTEGRATION "Build eNet integration" OFF)
ENDIF(BUILD_QT)  

IF(CMAKE_COMPILER_IS_GNUCXX)
  ADD_DEFINITIONS(${CMAKE_CXX_FLAGS} "-Wno-deprecated")
ENDIF(CMAKE_COMPILER_IS_GNUCXX)
     
ADD_SUBDIRECTORY(ext)  
ADD_SUBDIRECTORY(source)
ADD_SUBDIRECTORY(examples)


